<!DOCTYPE html>
<html>
<head>
    <title>
        Button Ripple Effect - GFG
    </title>
  
    <style>
        /* Adding styles to button */
        .btn {
            padding: 12px 50px;
            border: none;
            border-radius: 5px;
            background-color: #1abc9c;
            color: #fff;
            font-size: 18px;
            outline: none;
            cursor: pointer;
  
            /* We need this to position
                span inside button */
            position: relative;
            overflow: hidden;
            box-shadow: 6px 7px 40px -4px
                    rgba(0, 0, 0, 0.2);
        }
        
        
        .btn span {
        position: absolute;
        border-radius: 50%;
        /* To make it round */
        background-color: rgba(0, 0, 0, 0.3);
      
        width: 100px;
        height: 100px;
        margin-top: -50px;
        /* for positioning */
        margin-left: -50px;
      
        animation: ripple 1s;
        opacity: 0;
    }
      
    /* Add animation */
    @keyframes ripple {
        from {
            opacity: 1;
            transform: scale(0);
        }
      
        to {
            opacity: 0;
            transform: scale(10);
        }
    }
        
    </style>
</head>
  
<body>
    <button class="btn">
        Enter GeeksforGeeks
    </button>
    
    
    <script>
        
        const btn = document.querySelector(".btn");
  
    // Listen for click event
    btn.onclick = function (e) {
  
        // Create span element
        let ripple = document.createElement("span");
  
        // Add ripple class to span
        ripple.classList.add("ripple");
  
        // Add span to the button
        this.appendChild(ripple);
  
        // Get position of X
        let x = e.clientX - e.target.offsetLeft;
  
        // Get position of Y
        let y = e.clientY - e.target.offsetTop;
  
        // Position the span element
        ripple.style.left = `${x}px`;
        ripple.style.top = `${y}px`;
  
        // Remove span after 0.3s
        setTimeout(() => {
            ripple.remove();
        }, 300);
  
    };
    </script>
</body>
</html>